name: Test

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  cache_gems:
    name: Cache ruby gems for faster testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: ruby/setup-ruby@v1
      with:
        # We always need to tell ruby/setup-ruby to cache the gems for us.
        bundler-cache: true
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: cache_gems
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Lint code for consistent style
        run: bin/rubocop -f github
  seeds:
    name: Migrations, Seeds, Factories
    runs-on: ubuntu-latest
    needs: cache_gems
    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: starter_template_2025_test
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Create DB and run migrations
        run: |
          bin/rails db:drop || true
          bin/rails db:create && bin/rails db:migrate

      - name: Lint Factories
        run: bin/rails factory_bot:lint

      - name: Run Seeds
        run: |
          bin/rails db:seed

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: cache_gems
    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: starter_template_2025_test
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Install frontend dependencies
        run: yarn install --frozen-lockfile
      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Precompile assets
        run: bundle exec rails assets:precompile
      - name: Set up database
        run: |
          bundle exec rails db:drop db:create db:migrate
      - name: Run seeds (fail if error)
        run: bundle exec rails db:seed
      - name: Run model specs
        run: bundle exec rspec spec/models
      - name: Run request specs
        run: bundle exec rspec spec/requests
      - name: Run service specs
        run: bundle exec rspec spec/services
      - name: Notify Slack on test failure
        if: failure()
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "⚠️ Could not notify Slack, you need to set secrets.SLACK_WEBHOOK_URL"
          else
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"❌ Tests failed! Check the GitHub Actions logs for details: '"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"'"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
