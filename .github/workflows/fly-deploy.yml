# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Fly Deploy
on:
  push:
    branches:
      - production
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: data_later_test
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Install frontend dependencies
        run: yarn install --frozen-lockfile
      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Precompile assets
        run: bundle exec rails assets:precompile
      - name: Set up database
        run: |
          bundle exec rails db:drop db:create db:migrate
      - name: Run seeds (fail if error)
        run: bundle exec rails db:seed
      - name: Run model specs
        run: bundle exec rspec spec/models
      - name: Run request specs
        run: bundle exec rspec spec/requests
      - name: Run service specs
        run: bundle exec rspec spec/services
      - name: Notify Slack on test failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"‚ùå Tests failed! Deployment was blocked. Check the GitHub Actions logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: test
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_ORGANIZATION_AUTH_TOKEN }}
          SENTRY_ORG: scottjg-test-organization
          SENTRY_PROJECT: friale-alpha
        with:
          environment: production
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Notify Slack on successful deployment
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"üöÄ Deployment successful! The latest changes have been deployed to production."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Notify Slack on deployment failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"‚ùå Deployment failed! Check the GitHub Actions logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
